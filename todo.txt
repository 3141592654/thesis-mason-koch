Ask Mark for more math stuff. (Suggested by David)  //"I don't know what he wants..." See if Sutton and Barto hade anything David would like to explore
See if Reed has any computer clusters I could use for my thesis. (Suggested by David)  //"not really". 
Split the weights into a new neural network for every pair of Pokemon.
In December, when you will have much time and not much communication with advisors, clean up this list of accumulated crud:
  Update preprocess_observation_smogon.py in light of commit "Added which team the model was trained on and against to the model. This will allow us to check if the weights we have loaded are valid for the teams we want to use. Updated preprocess_observation.py accordingly. Also cut out the parts of pkmn_smogon.py that never get used."
  Is it necessary to import numpy as np in both pkmn.py, preprocess_observation.py and bookkeeper.py?
  In bookkeeper, make it reset all the stat boosts when a new Pokemon switches in.
  Make sure model in bookkeeper is getting passed by reference.
  Make sure spikes and toxic spikes don't get confused in preprocess_observation.
  Make code prettier in general.
  Add support for recovering hp in preprocess_observation_smogon.
  Remove the stuff that doesn't need to be in the _smogon. (Done???)
  Update test_pokemon.
  Make indexing into the state array prettier?
  In choose_action: remember which Pokemon are fainted, don't recompute every time.
  Investigate the x variables getting transposed after being put into the bookkeeper and then vstacked. For instance, in test_bookkeeper. (Done???).
  Make it run several battles before updating weights.
  Update preprocess_smogon so it does absolute boosts instead of relative ones.
  If still applicable, get the p1a_indices and so forth in preprocess_observation_smogon to be derived from game_model.
  Consider condition[1] in preprocess_observation. Should this be a variable called status?
  Why is there no HAZARD_DICT in game_model.py?
  Add preprocess_observation in bookkeeper.py into the global namespace.
  Fix abominable performance.
  Finalise how many status conditions you are going to have and update game_model accordingly.
  Make \footnote{\cite{blablabla}} in your thesis prettier.
  Deal with copyright issues at https://github.com/smogon/pokemon-showdown-cient.
Contemplate why we have one model that outputs a vector instead of multiple models which output scalars.
Settle on 0 indexing or 1 indexing in thesis.
Learn more about the Pokemon game mechanics (e.g. volatiles) and add those to the state.



